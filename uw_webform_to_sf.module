<?php

/**
 * @file
 * Webform to SF module
 *
 * The webfrom to sf module is based on webform remote post it works along the
 * @link http://drupal.org/project/webform Webform @endlink module.
 * 
 */


/**
 * Implements hook_menu().
 *
 * @see webform_menu_load()
 */
function uw_webform_to_sf_menu() {
  $items = array();

  // Targets list, %webform_menu is an auto-loader wildcard component
  // provided by the webform module (method is webform_menu_load), and it
  // auto-loads a webform node.
  $items['node/%webform_menu/webform/sfconfig'] = array(
    'title' => 'Send to Salesforce',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('uw_webform_to_sf_config_form', 1),
    'access callback' => 'user_access',
    'access arguments' => array('admin webform remote posts'),    
    'file' => 'includes/uw_webform_to_sf_config.inc',
    'weight' => 1,
    'type' => MENU_LOCAL_TASK,
  );

  return $items;

}

function uw_webform_to_sf_webform_submission_insert($node, $submission) {

  //save the form and attachments to salesforce, requires an appropriate webservice to be setup
  $attachment_map = array();
  $componentinfo = '';

  $config = db_select('webform_to_sf_config')
    ->fields('webform_to_sf_config', array('target', 'sobject', 'enabled'))
    ->condition('nid', $node->nid)
    ->execute()->fetchAssoc();


  if ($config && $config['enabled']) {
    //service url 
    $url = $config['target'];
    $data = '';

    $payload = array();
    $payload['targetobject'] = $config['sobject'];
    $payload['files'] = array();

    foreach ($node->webform['components'] as $component) {
      if (isset($submission->data[$component['cid']])) {
        if ($component['type'] == 'file') {
          if (isset($submission->data[$component['cid']][0])) {
            $attachment_map[$component['cid']] = $component;
            $component_data = $submission->data[$component['cid']];
            $query = db_select('file_managed');
            $query->fields('file_managed', array('filename', 'uri', 'filemime'));
            $query->condition('fid', $submission->data[$component['cid']][0]);

            $result = $query->execute()->fetchAssoc();

            $thefile = array(); 
            $thefile['name'] = $result['filename'];
            $thefile['mime'] = $result['filemime'];
            $thefile['data'] = base64_encode(file_get_contents($result['uri']));
            array_push($payload['files'], $thefile);
          }
        } 
        else {
          $payload[$component['form_key']] = implode(';', $submission->data[$component['cid']]);
        }
      }
    }

    $json_encoded = json_encode($payload);

    $ch = curl_init($url);
    curl_setopt($ch, CURLOPT_SSLVERSION, 6);
    curl_setopt($ch, CURLOPT_CUSTOMREQUEST, "POST");                                                                     
    curl_setopt($ch, CURLOPT_POSTFIELDS, $json_encoded);                                                                  
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, TRUE);                                                                      
    curl_setopt($ch, CURLOPT_HTTPHEADER, array(                                                                          
      'Content-Type: application/json',                                                                                
      'Content-Length: ' . strlen($json_encoded))                                                                       
    );

    $result = curl_exec($ch);

  }
}